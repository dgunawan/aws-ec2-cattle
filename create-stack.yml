AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  TargetStackName:
    Description: The name of the stack to be created
    Type: String
    Default: Test
  TargetS3Bucket:
    Description: The name os the S3 bucket
    Type: String
    Default: http://s3.amazonaws.com/318-auto-deploy/LambdaAMILookupSample-win.yml

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateLambda}

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DeleteLogGroup 
            Resource: arn:aws:logs:*:*:*
          
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
            Resource: "*"
          
          - Effect: Allow
            Action: 
              - iam:CreateRole
              - iam:DeleteRolePolicy
              - iam:DeleteRole
              - iam:PutRolePolicy
              - iam:GetRolePolicy
              - iam:GetRole
              - iam:PassRole
            Resource: "*"
          
          - Effect: Allow
            Action: 
              - lambda:*
            Resource: "*"

          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetObject
            Resource: arn:aws:s3:::*

          - Effect: Allow
            Action:
              - events:RemoveTargets
              - events:DeleteRule
              - events:PutRule 
              - events:DescribeRule
              - events:PutTargets 
            Resource: "*"
          
          - Effect: Allow
            Action:
              - ec2:TerminateInstances
              - ec2:DescribeInstances 
              - ec2:RunInstances 
            Resource: "*"

  CreateLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.6
      Environment:
        Variables:
          vTargetStackName: !Ref TargetStackName
          vTargetS3Bucket: !Ref TargetS3Bucket
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          import os
          import logging

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)
          cf_client = boto3.client('cloudformation')

          def handler(event, context):
            print("Creating stack: " + os.environ['vTargetStackName'])
            cf_client.create_stack(
                StackName=os.environ['vTargetStackName'],
                TemplateURL=os.environ['vTargetS3Bucket'],
                Capabilities=['CAPABILITY_IAM']
            )

            print("Creating destoyer stack")
            cf_client.create_stack(
                StackName='destroy-stack',
                TemplateURL='http://s3.amazonaws.com/318-auto-deploy/destroy-stack.yml',
                Capabilities=['CAPABILITY_IAM'],
                Parameters=
                [
                  {
                      'ParameterKey': 'TargetStackName',
                      'ParameterValue': os.environ['vTargetStackName'],
                      'UsePreviousValue': False,
                      'ResolvedValue': 'string'
                  },
                ]
            )

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "CreateLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "CreateRule"
          - "Arn"      
          
  CreateRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: "cron(0/5 * * * ? *)"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "CreateLambda"
              - "Arn"
          Id: "CreateLambdaV1"
          Input: !Sub
          - "{\"StackName\": \"${Stack}\"}"
          - { Stack: !Ref "TargetStackName" }       