# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/walkthrough-custom-resources-lambda-lookup-amiids.htmls

AWSTemplateFormatVersion: 2010-09-09
Description: >-

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
  WindowsVersion:
    Description: Windows Version
    Type: String
    Default: Microsoft Windows Server 2016 Base
    AllowedValues:
      - Microsoft Windows Server 2019 Base
      - Microsoft Windows Server 2016 Base
    ConstraintDescription: Must be a valid Windows version.
  ModuleName:
    Description: The name of the Lambda NodeJS file
    Type: String
    Default: amilookup-win
  S3Bucket:
    Description: The name of the bucket for the Lambda
    Type: String
    Default: 318-auto-deploy
  S3Key:
    Description: The name of the Lambda ZIP file
    Type: String
    Default: amilookup-win.zip
  KMSKeyArn:
    Description: Arn of the KMS key used to encrypt disks
    Type: String

Resources:
  SampleInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: us-east-1a
      InstanceType: !Ref InstanceType
      ImageId: !GetAtt 
        - AMIInfo
        - Id
  
  # add a volume
  InstanceVolume2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 10
      Encrypted: True
      VolumeType: gp2
      Tags:
        - Key: Name
          Value: test
      KmsKeyId: !Ref KMSKeyArn 
      AvailabilityZone: us-east-1a

  AMIInfo:
    Type: 'Custom::AMIInfo'
    Properties:
      ServiceToken: !GetAtt 
        - AMIInfoFunction
        - Arn
      Region: !Ref 'AWS::Region'
      OSName: !Ref WindowsVersion

  AttachVol2:
      Type: 'AWS::EC2::VolumeAttachment'
      Properties:
        InstanceId: !Ref SampleInstance
        VolumeId: !Ref InstanceVolume2
        Device: /dev/xvdf    

  AMIInfoFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Handler: !Join 
        - ''
        - - !Ref ModuleName
          - .handler
      Role: !GetAtt 
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs10.x
      Timeout: '30'

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AMIInfoFunction}
      RetentionInDays: 1

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ami_lookup_lambda_policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents    
                  - logs:PutRetentionPolicy              
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                Resource: '*'